{"version":3,"sources":["Components/EmailNotCome/emailNotCome.module.scss","Components/ConfirmEmail/confirmEmail.module.scss","app.module.scss","Components/Header/Header.tsx","Components/Authorization/Authorization.tsx","Components/Registration/Registration.tsx","Components/ConfirmEmail/ConfirmEmail.tsx","Components/EmailNotCome/EmailNotCome.tsx","App.tsx","reportWebVitals.ts","index.tsx","Components/Registration/registration.module.scss","Components/Authorization/authorization.module.scss","Components/Header/header.module.scss"],"names":["module","exports","Header","pathname","useLocation","confirmEmail","className","styles","headerWrapper","headerSpanWrapperLivedune","headerWrapperButtonSpan","headerSpanAccont","to","style","textDecoration","color","cursor","headerButtonCheckIn","Authorization","useState","nameEmail","setNameEmail","namePassword","setnamePassword","errorNameEmailPassword","setErrorNameEmailPassword","emptyNameEmailPassword","SetEmptyNameEmailPassword","styleErrorNameEmailPassword","marginBottom","authorizationWrapper","authorizationMainContent","fontWeight","fontSize","margin","authorizationButtonFacebookGoogle","authorizationButtonFacebook","authorizationButtonGoogle","width","errorInput","authorizationInputEmail","onChange","e","currentTarget","value","placeholder","type","authorizationInputPassword","authorizationButtonLogIn","onClick","alert","marginTop","Registration","registrationName","setRegistrationName","registrationEmail","setRegistrationEmail","registrationPassword","setRegistrationPassword","setRegistrationNamePromoCode","registrationPromoCode","isregistrationPromoCode","emptyNameEmailPasswordPromoCode","isEmptyNameEmailPasswordPromoCode","errorRegistrationEmailTitle","isErrorRegistrationEmailTitle","checkPassed","isCheckPassed","exact","from","registrationWrapper","registrationMainContent","textAlign","registrationButtonFacebookGoogle","registrationButtonFacebook","registrationButtonGoogle","registrationInputName","registrationInputEmail","registrationInputPassword","registrationInputPromoCode","registrationButtonCreateAccont","checkEmptyNameEmailPasswordPromoCode","checkErrorEmail","test","styleSpanEmailNotCome","ConfirmEmail","wrapperConfirmEmail","spanTextConfirmEmail","confirmEmailButton","EmailNotCome","inputName","isInputName","inputEmailError","isInputEmailError","styleText","wrapperEmailNotCome","errorInputEmail","inputEmailNotCome","onBlur","isEmailTitleError","emailNotComeButton","App","wrapperApp","path","render","notFound","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2f668ceb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperEmailNotCome\":\"emailNotCome_wrapperEmailNotCome__1q701\",\"inputEmailNotCome\":\"emailNotCome_inputEmailNotCome__O_tvZ\",\"errorInputEmail\":\"emailNotCome_errorInputEmail__1Q0Vk\",\"emailNotComeButton\":\"emailNotCome_emailNotComeButton__2b_Iz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperConfirmEmail\":\"confirmEmail_wrapperConfirmEmail__2g5Pt\",\"spanTextConfirmEmail\":\"confirmEmail_spanTextConfirmEmail__9JfrB\",\"confirmEmailButton\":\"confirmEmail_confirmEmailButton__3HcOW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperApp\":\"app_wrapperApp__3Z7v6\",\"notFound\":\"app_notFound__1K6J7\"};","import React, { useState } from 'react';\r\nimport { NavLink, useLocation } from 'react-router-dom';\r\nimport styles from './header.module.scss'\r\n\r\nconst Header = () => {\r\n    const { pathname } = useLocation();\r\n\r\n    let confirmEmail = true;\r\n\r\n    const isAuthorizationRegistration = () => {\r\n        if (pathname === '/Authorization') {\r\n            return '/Registration'\r\n        } else {\r\n            return '/Authorization'\r\n        }\r\n    }\r\n\r\n    if (pathname === '/ConfirmEmail' || pathname === '/EmailNotCome') {\r\n        confirmEmail = false\r\n    } else {\r\n        confirmEmail = true\r\n    }\r\n\r\n    return (\r\n        <nav className={styles.headerWrapper}>\r\n            <div className={styles.headerSpanWrapperLivedune}>\r\n                <span>LIVEDUNE</span>\r\n            </div>\r\n            <div className={styles.headerWrapperButtonSpan}>\r\n                {confirmEmail ? <span className={styles.headerSpanAccont}>{pathname === '/Authorization' ? 'У вас нет аккаунта?' : 'Уже есть аккаунт?'}</span>\r\n                    : <NavLink to={'/Authorization'} style={{textDecoration: 'none', color: 'gray', cursor: 'pointer'}}><span>Выйти</span></NavLink>\r\n                }\r\n                {confirmEmail && <NavLink to={isAuthorizationRegistration}>\r\n                    <button className={styles.headerButtonCheckIn}>{pathname === '/Authorization' ? 'Регистрация' : 'Войти'}</button>\r\n                </NavLink>}\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Header;","import React, { useState } from 'react';\r\nimport styles from './authorization.module.scss'\r\n\r\nconst Authorization = () => {\r\n    const [nameEmail, setNameEmail] = useState('');\r\n    const [namePassword, setnamePassword] = useState('');\r\n    const [errorNameEmailPassword, setErrorNameEmailPassword] = useState(false)\r\n    const [emptyNameEmailPassword, SetEmptyNameEmailPassword] = useState(false)\r\n\r\n    const addLogIn = () => {\r\n        if (nameEmail === 'example@example.com' && namePassword === 'password2021') {\r\n            setErrorNameEmailPassword(false)\r\n            alert('Вы вошли!')\r\n        } else {\r\n            setErrorNameEmailPassword(true)\r\n        }\r\n        \r\n        if (nameEmail === '' && namePassword === '') {\r\n            SetEmptyNameEmailPassword(true)\r\n            setErrorNameEmailPassword(false)\r\n        } else {\r\n            SetEmptyNameEmailPassword(false)\r\n        }\r\n    }\r\n\r\n    const styleErrorNameEmailPassword = {\r\n        color: 'red', \r\n        marginBottom: 15\r\n    }\r\n\r\n    return (\r\n        <nav className={styles.authorizationWrapper}>\r\n            <div className={styles.authorizationMainContent}>\r\n                <span style={{fontWeight: 650, fontSize: '220%'}}>Войти</span>\r\n                <span style={{color: 'gray', margin: '15px 0px'}}>Добро пожаловать, рады вас видеть!</span>\r\n                <div className={styles.authorizationButtonFacebookGoogle}>\r\n                    <button className={styles.authorizationButtonFacebook}>Войти через Facebook</button>\r\n                    <button className={styles.authorizationButtonGoogle}>Войти через Google</button>\r\n                </div>\r\n                <span style={{color: 'gray', marginBottom: 15, width: 13}}>или</span>\r\n                <input className={errorNameEmailPassword || emptyNameEmailPassword ? styles.errorInput : styles.authorizationInputEmail} onChange={(e) => setNameEmail(e.currentTarget.value)} placeholder='Email'/>\r\n                <input type={'password'} className={errorNameEmailPassword || emptyNameEmailPassword ? styles.errorInput : styles.authorizationInputPassword} onChange={(e) => setnamePassword(e.currentTarget.value)} placeholder='Пароль'/>\r\n                {errorNameEmailPassword && <span style={styleErrorNameEmailPassword}>Неверный email или пароль</span>}\r\n                {emptyNameEmailPassword && <span style={styleErrorNameEmailPassword}>Введите email, введите пароль</span>}\r\n                <button className={styles.authorizationButtonLogIn} onClick={addLogIn}>Войти в аккаунт</button>\r\n                <span style={{fontWeight: 'bold', color: '#5b43d6', cursor: 'pointer'}}>Забыли пароль?</span>\r\n                <span style={{fontWeight: 'lighter', marginTop: 15}}>Email: example@example.com Пароль: password2021</span>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Authorization;","import { type } from 'os';\r\nimport React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport styles from './registration.module.scss'\r\n\r\ninterface TypeRegistrationProps {\r\n    registrationName: string,\r\n    setRegistrationName: (active: string) => void\r\n}\r\n\r\nconst Registration = ({ registrationName, setRegistrationName }: TypeRegistrationProps) => {\r\n    const [registrationEmail, setRegistrationEmail] = useState('');\r\n    const [registrationPassword, setRegistrationPassword] = useState('');\r\n    const [registrationNamePromoCode, setRegistrationNamePromoCode] = useState('');\r\n    const [registrationPromoCode, isregistrationPromoCode] = useState(false);\r\n    const [emptyNameEmailPasswordPromoCode, isEmptyNameEmailPasswordPromoCode] = useState(false);\r\n    const [errorRegistrationEmailTitle, isErrorRegistrationEmailTitle] = useState(false);\r\n    const [checkPassed, isCheckPassed] = useState(false)\r\n\r\n    const createAccount = () => {\r\n        let checkEmptyNameEmailPasswordPromoCode = false;\r\n        let checkErrorEmail = false;\r\n        if (registrationName === '' || registrationEmail === '' || registrationPassword === '') {\r\n            checkEmptyNameEmailPasswordPromoCode = true\r\n        }\r\n\r\n        let str = (/^(|(([A-Za-z0-9]+_+)|([A-Za-z0-9]+\\-+)|([A-Za-z0-9]+\\.+)|([A-Za-z0-9]+\\++))*[A-Za-z0-9]+@((\\w+\\-+)|(\\w+\\.))*\\w{1,63}\\.[a-zA-Z]{2,6})$/);\r\n        let isEmailTitleError = str.test(registrationEmail)\r\n        if (isEmailTitleError === false) {\r\n            checkErrorEmail = true\r\n        }\r\n        if (!checkEmptyNameEmailPasswordPromoCode && !checkErrorEmail) {\r\n            isCheckPassed(true)\r\n        } else {\r\n            isEmptyNameEmailPasswordPromoCode(checkEmptyNameEmailPasswordPromoCode)\r\n            isErrorRegistrationEmailTitle(checkErrorEmail)\r\n        }\r\n    }\r\n\r\n    const styleErrorNameEmailPassword = {\r\n        color: 'red', marginBottom: 15\r\n    }\r\n\r\n    if (checkPassed) {\r\n        return <Redirect exact from='/Registration' to='/ConfirmEmail' />\r\n    } else {\r\n        return (\r\n            <nav className={styles.registrationWrapper}>\r\n                <div className={styles.registrationMainContent}>\r\n                    <span style={{ fontWeight: 650, fontSize: '220%' }}>Регистрация</span>\r\n                    <span style={{ color: 'gray', margin: '15px 0px', textAlign: 'center' }}>Зарегистрируйся и получи доступ к аналитике аккаунтов.</span>\r\n                    <div className={styles.registrationButtonFacebookGoogle}>\r\n                        <button className={styles.registrationButtonFacebook}>Войти через Facebook</button>\r\n                        <button className={styles.registrationButtonGoogle}>Войти через Google</button>\r\n                    </div>\r\n                    <span style={{ color: 'gray', marginBottom: 15, width: 13 }}>или</span>\r\n                    <input className={emptyNameEmailPasswordPromoCode ? styles.errorInput : styles.registrationInputName} onChange={(e) => setRegistrationName(e.currentTarget.value)} placeholder='Имя' />\r\n                    <input className={errorRegistrationEmailTitle || emptyNameEmailPasswordPromoCode ? styles.errorInput : styles.registrationInputEmail} onChange={(e) => setRegistrationEmail(e.currentTarget.value)} placeholder='Email' />\r\n                    {errorRegistrationEmailTitle && <span style={styleErrorNameEmailPassword}>Возможно вы ошиблись в указании почтового сервиса</span>}\r\n                    <input type={'password'} className={emptyNameEmailPasswordPromoCode ? styles.errorInput : styles.registrationInputPassword} onChange={(e) => setRegistrationPassword(e.currentTarget.value)} placeholder='Пароль' />\r\n                    {registrationPromoCode === true ? <input className={styles.registrationInputPromoCode} onChange={(e) => setRegistrationNamePromoCode(e.currentTarget.value)} placeholder='Промокод' />\r\n                        : <span style={{ fontWeight: 'bold', color: '#5b43d6', cursor: 'pointer', margin: '5px 0px 20px' }} onClick={() => isregistrationPromoCode(true)}>У меня есть промокод</span>}\r\n                    {emptyNameEmailPasswordPromoCode && <span style={styleErrorNameEmailPassword}>Введите имя, введите email, введите пароль</span>}\r\n                    <button className={styles.registrationButtonCreateAccont} onClick={createAccount}>Создать аккаунт</button>\r\n                    <span style={{ fontWeight: 'bold', textAlign: 'center' }}>Создавая аккаунт я соглашаюсь с <span style={{ fontWeight: 'bold', color: '#5b43d6', cursor: 'pointer' }}>условиями оферты</span></span>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Registration;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styles from './confirmEmail.module.scss';\r\n\r\ninterface TypeConfirmEmailProps {\r\n    registrationName: string;\r\n}\r\n\r\nexport const styleSpanEmailNotCome = {\r\n    fontWeight: 700,\r\n    color: '#5b43d6',\r\n    cursor: 'pointer',\r\n    textDecoration: 'none',\r\n}\r\n\r\nconst ConfirmEmail = ({ registrationName }: TypeConfirmEmailProps) => {\r\n    return (\r\n        <div className={styles.wrapperConfirmEmail}>\r\n            <span style={{ fontWeight: 650, fontSize: '220%', marginBottom: 15, textAlign: 'center', width: '80%' }}>Подтвердите ваш e-mail</span>\r\n\r\n            <span className={styles.spanTextConfirmEmail}>\r\n                {registrationName}, на ваш E-mail отправлено письмо со ссылкой для\r\n            подтверждения. Перейдите по ней, чтобы активировать вашу учетную\r\n            запись и получить 7 дней бесплатного доступа.\r\n            </span>\r\n            {/* <span style={styleText}>{registrationName}, на ваш E-mail отправлено письмо со ссылкой для</span>\r\n            <span style={styleText}>подтверждения. Перейдите по ней, чтобы активировать вашу учетную</span>\r\n            <span style={styleText}>запись и получить 7 дней бесплатного доступа.</span> */}\r\n            <button className={styles.confirmEmailButton}>Перейти к почте</button>\r\n            <NavLink to={'/EmailNotCome'} style={styleSpanEmailNotCome}>\r\n                Мне не пришло письмо\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ConfirmEmail;","import React, { useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styles from './emailNotCome.module.scss';\r\n\r\nconst EmailNotCome = () => {\r\n    const [inputName, isInputName] = useState('')\r\n    const [inputEmailError, isInputEmailError] = useState(false)\r\n\r\n    const addEmail = () => {\r\n        if (!inputEmailError) {\r\n            alert('Отправлено на почту')\r\n        }\r\n    }\r\n\r\n    const checkEmailError = () => {\r\n        let str = (/^(|(([A-Za-z0-9]+_+)|([A-Za-z0-9]+\\-+)|([A-Za-z0-9]+\\.+)|([A-Za-z0-9]+\\++))*[A-Za-z0-9]+@((\\w+\\-+)|(\\w+\\.))*\\w{1,63}\\.[a-zA-Z]{2,6})$/);\r\n        let isEmailTitleError = str.test(inputName)\r\n        if (isEmailTitleError === false || inputName === '') {\r\n            isInputEmailError(true)\r\n        } else {\r\n            isInputEmailError(false)\r\n        }\r\n    }\r\n\r\n    const styleText = {\r\n        color: 'gray',\r\n        marginBottom: 5,\r\n    }\r\n    return (\r\n        <div className={styles.wrapperEmailNotCome}>\r\n            <span style={{ fontWeight: 650, fontSize: '220%', marginBottom: 15 }}>Мне не пришло письмо</span>\r\n            <span style={styleText}>Письмо может придсти с задержкой в 5-10 минут.</span>\r\n            <span style={styleText}>Также проверьте разные папки почтового ящика (актуально для gmail.com) и папку</span>\r\n            <span style={styleText}>\"Спам\". Если письмо все же не пришло, повторите попытк или напишите об этом в</span>\r\n            <span style={styleText}>тех.поддержку <span style={{ fontWeight: 700, color: '#5b43d6', cursor: 'pointer' }}>support@livedune.ru</span> и мы активируем ваш аккаунт.</span>\r\n            <input className={inputEmailError ? styles.errorInputEmail : styles.inputEmailNotCome} onBlur={checkEmailError} onChange={(e) => isInputName(e.currentTarget.value)} placeholder='Email' />\r\n            {inputEmailError && <span style={{color: 'red', marginBottom: 15}}>Возможно вы ошиблись в указании почтового сервиса</span>}\r\n            <button className={styles.emailNotComeButton} onClick={addEmail}>Отправить заново</button>\r\n            <NavLink to={'/ConfirmEmail'} style={{ color: 'gray', textDecoration: 'none', fontWeight: 500 }}>\r\n                Отмена\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EmailNotCome;","import React, {useState} from 'react';\nimport styles from './app.module.scss';\nimport Header from './Components/Header/Header';\nimport Authorization from './Components/Authorization/Authorization';\nimport Registration from './Components/Registration/Registration';\nimport ConfirmEmail from './Components/ConfirmEmail/ConfirmEmail';\nimport EmailNotCome from './Components/EmailNotCome/EmailNotCome';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nconst App = () => {\n  const [registrationName, setRegistrationName] = useState('');\n  return (\n    <div className={styles.wrapperApp}>\n      <Header />\n      <Switch>\n        <Redirect exact from='/' to='/Authorization' />\n        <Route exact path='/Authorization' render={() => <Authorization />} />\n        <Route exact path='/Registration' render={() => <Registration registrationName={registrationName} setRegistrationName={setRegistrationName}  />} />\n        <Route exact path='/ConfirmEmail' render={() => <ConfirmEmail registrationName={registrationName} />} />\n        <Route exact path='/EmailNotCome' render={() => <EmailNotCome />} />\n        <Route render={() => <div className={styles.notFound}>404 NOT FOUND</div>} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registrationWrapper\":\"registration_registrationWrapper__385sU\",\"registrationMainContent\":\"registration_registrationMainContent__1EjA7\",\"registrationButtonFacebookGoogle\":\"registration_registrationButtonFacebookGoogle__330vT\",\"registrationButtonFacebook\":\"registration_registrationButtonFacebook__UIv5y\",\"registrationButtonGoogle\":\"registration_registrationButtonGoogle__2eUPp\",\"registrationInputEmail\":\"registration_registrationInputEmail__3WRri\",\"errorInput\":\"registration_errorInput__2eXjv\",\"registrationInputName\":\"registration_registrationInputName__2gOVZ\",\"registrationInputPassword\":\"registration_registrationInputPassword__H-SgA\",\"registrationInputPromoCode\":\"registration_registrationInputPromoCode__23Za8\",\"registrationButtonCreateAccont\":\"registration_registrationButtonCreateAccont__2dm9o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"authorizationWrapper\":\"authorization_authorizationWrapper__1g9uq\",\"authorizationMainContent\":\"authorization_authorizationMainContent__oUmuI\",\"authorizationButtonFacebookGoogle\":\"authorization_authorizationButtonFacebookGoogle__1EnQt\",\"authorizationButtonFacebook\":\"authorization_authorizationButtonFacebook__3LPby\",\"authorizationButtonGoogle\":\"authorization_authorizationButtonGoogle__19Spr\",\"authorizationInputEmail\":\"authorization_authorizationInputEmail__3w9Mg\",\"authorizationInputPassword\":\"authorization_authorizationInputPassword__1ks1b\",\"errorInput\":\"authorization_errorInput__2xdrM\",\"authorizationButtonLogIn\":\"authorization_authorizationButtonLogIn__116Fl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerWrapper\":\"header_headerWrapper__YR2ub\",\"headerSpanWrapperLivedune\":\"header_headerSpanWrapperLivedune__3pyd1\",\"headerWrapperButtonSpan\":\"header_headerWrapperButtonSpan__2Sojd\",\"headerSpanAccont\":\"header_headerSpanAccont__MhZtR\",\"headerButtonCheckIn\":\"header_headerButtonCheckIn__i6rQh\"};"],"sourceRoot":""}